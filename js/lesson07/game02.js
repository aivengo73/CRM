"use strict";

// Усовершенствуйте игру, которую написали в game01
// бот предлагает ввести два числа, и загадывает случайное число в этом диапазоне
// бот запоминает каждое число которое ввел пользователь и записывает в массив
// бот отграничивает количество попыток до 30% от количества цифр в диапазоне
// если пользователь повторно ввел число, которое вводил ранее, то бот выводит "Это число вы уже вводили" попытка не засчитывается
// если диапазон от 50 до 100, то попыток бот даёт 15
// если попытки закончились игра прекращается

//             АЛГОРИТМ РЕШЕНИЯ.
/* 1. Задаётся диапазон из двух чисел и сохраняется в переменных n и m.
	 2. В зависимости от диапазона выставляется колличество попыток для угадывания числа пользователем
			и записывается в переменную const numberAttempts.
	 3. Генерируется число которое должен угадать пользователь лежащее в заданном диапазоне и сохраняем его в const num.
	 4. Создаём функцию проверку на целое, натуральное число и присваиваем её в const isNumber.
	 5. Объявляем function(), задача которой принимать от пользователя число, сравнивая его с рондомным от бота,
			формировать ответы и выводить их на экран
	 6. Внутри тела function() создаём переменную numUser. В неё будет приходить ответ от пользователя через prompt().
	 7. Создаём переменную let count, которая будет подсчитывать колличество попыток отгадок числа пользователем.
	 8. Делаем проверку - сравнение колличество попыток данных пользователю numberAttempts с колличеством использованных count.
	 9. Делаем проверку на "Отмену игры".
	 
	10. Просим пользователя ввести число через prompt, делаем проверку на число введённого значения и сохраняем его в записывается в массив numUserArr.
			Если это не число, зацикливаем на функцию проверки сохранённой в const isNumber, пока введённое значение не будет числом.
			При этом выводим пользователю на экран "Введите число".
	11. Делаем сравнение вводимого числа пользователем с числом введёным ранее и находящимся в массиве numUserArr,
			при обнаружении совпадения выводится сообщение на экран "Это число вы уже вводили" попытка не засчитывается.
	12. Сравниваем значения чисел бота и пользователя. Если число пользователя меньше случайного числа бота Выводим на эран "Больше!".
			и зацикливаем программу. Делаем рекурсию.
	13. Если число пользователя больше случайного числа бота Выводим на эран "Меньше!".
			и зацикливаем программу. Делаем рекурсию.
	14. "Правильно" делаем return со значением числа пользователя и выводом на экран "Правильно"
	15. Заканчиваем игру. */

	
	const isNumber = function (numUser) {
		return !isNaN(parseFloat(numUser)) && isFinite(numUser);
	};

	function randomNum() {

		const n = +prompt('Введите число начало диапазона', '');

		if (n === 0) return;

		if (!isNumber(n) || n < 1 || n > 100) {
			alert('Введите число от 1 до 100');
			return randomNum();
		}

		const m = +prompt('Введите число конец диапазона', '');

		if (m === 0) return;

		if (!isNumber(m) || m < 1 || m > 100) {
			alert('Введите число от 1 до 100');
			return randomNum();
		}

		const numberAttempts = Math.floor(Math.abs((m - n) * 0.3)); // попытки
		const num = Math.floor(Math.random() * (m - n) + n); // число для угадывания
		let count = 0;
		const numUserArr = [];

		
		while (count < numberAttempts) {
			const numUser = +prompt(`Введите число от ${n} до ${m}`); // ответ игрока
	
			if (numUser === 0) {
				break;
			}

			if (!isNumber(numUser) || numUser < n || numUser > m) {
				// alert(`Введите число от ${n} до ${m}`);
				+prompt(`Введите число от ${n} до ${m}`);
				// return randomNum();
				continue;
			}
	
			const elementCheck = numUserArr.find(item => item === numUser);
	
			if (!isNumber(numUser)) {
				alert('Введите число!');
				continue;
			} else if (elementCheck === undefined) {
				numUserArr.push(numUser);
				console.log(numUserArr);
				count++;
			}
	
			if (elementCheck) {
				alert("Это число вы уже вводили");
				continue;
			} else if (count === numberAttempts && numUser !== num) {
				alert('У Вас закончились все попытки');
				break;
			} else if (numUser > num) {
				alert('Меньше!');
				continue;
			} else if (numUser < num) {
				alert('Больше!');
				continue;
			} else if (numUser === num) {
				alert('Правильно!');
				break;
			}
		}
	}
	randomNum();

	
		// if (!isNumber(n) || !isNumber(m) || n < 1 || m > 100) {
		// 	alert('Введите число от 1 до 100');
		// 	return randomNum();
		// }

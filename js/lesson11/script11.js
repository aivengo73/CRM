'use strict';

// !!    ЗАДАЧА#1

/* Переписать игровой бот для игры "Угадай число"
Функционал остаётся прежний, но вместо цикла (while или for)
используйте рекурсию


Написать простой игровой бот "Угадай число", который умеет следующее:

Загадывает число от 1 до 100;
предлагает пользователю ввести свой вариант отгадки;
если пользовательское число больше, чем загаданное, то бот выводит “Меньше!”
и предлагает ввести новый вариант;
если пользовательское число меньше, чем загаданное, то бот выводит “Больше!”
и предлагает ввести новый вариант;
если пользователь вводит правильное число, то бот выводит “Правильно!”;
если пользователь ввел не число, то выводит “Введи число!”;
если пользователь нажимает “Отмена”, то игра заканчивается.*/


// !!      АЛГОРИТМ РЕШЕНИЯ

/* 1. Формируем случайное число и сохраняем его в const num;
2. Создаём функцию проверку на целое, натуральное число
3. Объявляем function(), задача которой принимать от пользователя число,
сравнивая его с рондомным от бота, формировать ответы и выводить их на
экран пользователя
4. Внутри тела function() создаём переменную numUser.
В неё будет приходить ответ от пользователя через prompt
5. Делаем проверку на "отмену игры".
6. Просим пользователя ввести число через prompt,
делаем проверку на число введённого значения и сохраняем его в переменную
numUser(пункт 4). Если это не число, зацикливаем на функции -проверке пока
введённое значение не будет числом. При этом выводим пользователю на экран
"Введите число".
7. Сравниваем значения чисел бота и пользователя.Если число пользователя меньше
случайного числа бота Выводим на эран "Больше!". и зацикливаем программу.
Делаем рекурсию.
8. - "Меньше" -//-
9.- "Правильно" делаем return со значением числа пользователя и выводом на экран
"Правильно"
10. Заканчиваем игру.*/


const num = Math.floor(Math.random() * 100);

const isNumber = function(numUser) {
  return !isNaN(parseFloat(numUser)) && isFinite(numUser);
};

function randomNum() {
  const numUser = prompt('Введите число от 1 до 100', '');

  if (numUser === null) {
    return;
  }

  if (!isNumber(numUser)) {
    alert('Введите число!');
    return randomNum(numUser);
  }

  if (+numUser > num) {
    alert('Меньше!');
    return randomNum();
  }

  if (+numUser < num) {
    alert('Больше!');
    return randomNum();
  }

  if (+numUser === num) {
    alert('Правильно!');
  }
}
randomNum();

// !!    ЗАДАЧА#2

/* Напишите рекурсивную функцию, которая принимает один параметр массив,
генерирует целое число от 0 до 10 включительно и добавляет его в массив.
Каждый раз после добавления нового числа проверяет сумму элементов массива,
если она меньше 50 запускается снова передавая себе массив.
Если сумма 50 или больше, то функция возвращает этот массив.*/

const array = [];
const addNumberToArray = () => {
  const number = Math.floor(Math.random() * 10 + 1);
  array.push(number);

  const sum = array.reduce((accum, item) => accum + item, 0);
  if (sum >= 50) {
    return array;
  } else {
    return addNumberToArray(array);
  }
};
const res = addNumberToArray(array);
console.log(res);

